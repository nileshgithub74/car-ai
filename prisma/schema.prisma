generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String             @id @default(uuid())
  clerkUserId String             @unique
  email       String             @unique
  name        String?
  imageUrl    String?
  phone       String?
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  role        UserRole           @default(USER)
  testDrives  TestDriveBooking[]
  savedCars   UserSavedCars[]
}

model Car {
  id                String             @id @default(uuid())
  make              String
  model             String
  year              Int
  price             Decimal            @db.Decimal(10, 2)
  mileage           Int
  color             String
  fuelType          String
  transmission      String
  bodyType          String
  seats             Int?
  description       String
  status            CarStatus          @default(AVAILABLE)
  featured          Boolean            @default(false)
  images            String[]
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  testDriveBookings TestDriveBooking[]
  savedBy           UserSavedCars[]

  @@index([bodyType])
  @@index([make, model])
  @@index([price])
  @@index([year])
  @@index([status])
  @@index([fuelType])
  @@index([featured])
}

model TestDriveBooking {
  id          String        @id @default(uuid())
  carId       String
  userId      String
  bookingDate DateTime      @db.Date
  startTime   String
  endTime     String
  status      BookingStatus
  notes       String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  car         Car           @relation(fields: [carId], references: [id], onDelete: Cascade)
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([carId])
  @@index([userId])
  @@index([bookingDate])
  @@index([status])
}

model DealershipInfo {
  id           String        @id @default(uuid())
  name         String        @default("Vehiql Motors")
  address      String        @default("Car Street, Autovill")
  phone        String        @default("(555) 123-4567")
  email        String        @default("contact@vehiql.com")
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  workingHours WorkingHour[]
}

model WorkingHour {
  id           String         @id @default(uuid())
  dealershipId String
  dayOfWeek    DayOfWeek
  openTime     String
  closeTime    String
  isOpen       Boolean        @default(true)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  dealership   DealershipInfo @relation(fields: [dealershipId], references: [id], onDelete: Cascade)

  @@index([dealershipId, dayOfWeek])
  @@index([dayOfWeek])
  @@index([dealershipId])
  @@index([isOpen])
}

model UserSavedCars {
  id      String   @id @default(uuid())
  userId  String
  carId   String
  savedAt DateTime @default(now())
  car     Car      @relation(fields: [carId], references: [id], onDelete: Cascade)
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, carId])
  @@index([userId])
  @@index([carId])
}

enum UserRole {
  USER
  ADMIN
}

enum CarStatus {
  AVAILABLE
  UNAVAILABLE
  SOLD
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}
